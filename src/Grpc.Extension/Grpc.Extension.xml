<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Grpc.Extension</name>
    </assembly>
    <members>
        <member name="T:Grpc.Extension.GrpcExtensions">
            <summary>
            Grpc扩展
            </summary>
        </member>
        <member name="M:Grpc.Extension.GrpcExtensions.StartAndRegisterService(Grpc.Core.Server)">
            <summary>
            启动并注册服务
            </summary>
            <param name="server"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.GrpcExtensions.StopAndDeRegisterService(Grpc.Core.Server)">
            <summary>
            停止并反注册服务
            </summary>
            <param name="server"></param>
            <returns></returns>
        </member>
        <member name="T:Grpc.Extension.Interceptors.ServerInterceptor">
            <summary>
            服务端拦截器
            </summary>
        </member>
        <member name="M:Grpc.Extension.Interceptors.ServerInterceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})">
            <summary>
            单请求
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="request"></param>
            <param name="context"></param>
            <param name="continuation"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Interceptors.ServerInterceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})">
            <summary>
            客户端流请求
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="requestStream"></param>
            <param name="context"></param>
            <param name="continuation"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Interceptors.ServerInterceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})">
            <summary>
            服务端流返回
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="request"></param>
            <param name="responseStream"></param>
            <param name="context"></param>
            <param name="continuation"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Interceptors.ServerInterceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})">
            <summary>
            双向流
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="requestStream"></param>
            <param name="responseStream"></param>
            <param name="context"></param>
            <param name="continuation"></param>
            <returns></returns>
        </member>
        <member name="T:Grpc.Extension.Interceptors.JaegerTracingInterceptor">
            <summary>
            JaegerTracingMiddleware
            </summary>
        </member>
        <member name="T:Grpc.Extension.Interceptors.MonitorInterceptor">
            <summary>
            性能监控,记录日志
            </summary>
        </member>
        <member name="T:Grpc.Extension.Interceptors.ThrottleInterceptor">
            <summary>
            手动熔断处理
            </summary>
        </member>
        <member name="M:Grpc.Extension.Internal.GrpcMethodHelper.AutoRegisterMethod(Grpc.Extension.Abstract.IGrpcService,Grpc.Core.ServerServiceDefinition.Builder,System.String,System.String)">
            <summary>
            自动注册服务方法
            </summary>
            <param name="srv"></param>
            <param name="builder"></param>
            <param name="package"></param>
            <param name="serviceName"></param>
        </member>
        <member name="M:Grpc.Extension.Internal.GrpcMethodHelper.BuildMethod``2(Grpc.Extension.Abstract.IGrpcService,System.String,System.String,System.String,Grpc.Core.MethodType)">
            <summary>
            生成Grpc方法（CodeFirst方式）
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="srv"></param>
            <param name="methodName"></param>
            <param name="package"></param>
            <param name="srvName"></param>
            <param name="mType"></param>
            <returns></returns>
        </member>
        <member name="T:Grpc.Extension.BaseService.GrpcServiceExtension">
            <summary>
            GrpcServiceExtension
            </summary>
        </member>
        <member name="M:Grpc.Extension.BaseService.GrpcServiceExtension.BuildMeta(System.Collections.IDictionary)">
            <summary>
            生成Grpc元数据信息(1.19以前可以反射处理)
            </summary>
            <param name="callHandlers"></param>
        </member>
        <member name="T:Grpc.Extension.GrpcServerOptions">
            <summary>
            GrpcServerOptions
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.ServiceAddress">
            <summary>
            Grpc服务地址(192.168.*.*:0)
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.EnableDiscovery">
            <summary>
            是否启用服务注册和服务发现
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DiscoveryUrl">
            <summary>
            服务注册地址(http://192.168.8.6:8500)
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DiscoveryServiceName">
            <summary>
            服务注册名
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DiscoveryServiceTags">
            <summary>
            服务注册Tags(可用于版本标记)
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DiscoveryTTLInterval">
            <summary>
            服务TTL(秒)
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DefaultErrorCode">
            <summary>
            默认错误码
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.ChannelOptions">
            <summary>
            ChannelOption
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.Jaeger">
            <summary>
            JaegerOptions
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.GrpcCallTimeOut">
            <summary>
            Grpc客户端调用超时时间(单位:秒)
            </summary>
        </member>
        <member name="T:Grpc.Extension.ServerBuilder">
            <summary>
            ServerBuilder
            </summary>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.#ctor(System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Grpc.Extension.GrpcServerOptions},System.Collections.Generic.IEnumerable{Grpc.Extension.Interceptors.ServerInterceptor},System.Collections.Generic.IEnumerable{Grpc.Extension.Abstract.IGrpcService},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            ServerBuilder
            </summary>
            <param name="serviceProvider"></param>
            <param name="grpcServerOptions"></param>
            <param name="serverInterceptors"></param>
            <param name="grpcServices"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseOptions(System.Action{Grpc.Extension.GrpcExtensionsOptions})">
            <summary>
            注入基本配制
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.InitGrpcOptions">
            <summary>
            初始化配制
            </summary>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseGrpcOptions(System.Action{Grpc.Extension.GrpcServerOptions})">
            <summary>
            注入Grpc,Discovery配制
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseGrpcService(Grpc.Core.ServerServiceDefinition)">
            <summary>
            注入GrpcService
            </summary>
            <param name="serviceDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseGrpcService">
            <summary>
            注入IGrpcService
            </summary>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseGrpcService(System.Collections.Generic.IEnumerable{Grpc.Extension.Abstract.IGrpcService})">
            <summary>
            注入IGrpcService
            </summary>
            <param name="grpcServices"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseProtoGenerate(System.String,System.Boolean)">
            <summary>
            CodeFirst生成proto文件
            </summary>
            <param name="dir">生成目录</param>
            <param name="spiltProto">是否拆分service和message协议</param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseDashBoard">
            <summary>
            使用DashBoard(提供基础服务)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseInterceptor(Grpc.Extension.Interceptors.ServerInterceptor)">
            <summary>
            注入服务端中间件
            </summary>
            <param name="interceptor"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseInterceptor(System.Collections.Generic.IEnumerable{Grpc.Extension.Interceptors.ServerInterceptor})">
            <summary>
            注入服务端中间件
            </summary>
            <param name="interceptors"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseLoggerFactory">
            <summary>
            使用LoggerFactory
            </summary>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseLogger(System.Action{Grpc.Extension.Abstract.LoggerAccessor})">
            <summary>
            配制日志(默认使用LoggerFactory)
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseJaeger">
            <summary>
            有Jaeger配制就使用Jaeger
            </summary>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.Build">
            <summary>
            构建Server
            </summary>
            <returns></returns>
        </member>
        <member name="T:Grpc.Extension.ServiceCollectionExtensions">
            <summary>
            ServiceCollectionExtensions
            </summary>
        </member>
        <member name="M:Grpc.Extension.ServiceCollectionExtensions.AddGrpcExtensions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加Grpc扩展
            </summary>
            <typeparam name="TStartup">实现IGrpcService的类所在程序集下的任意类</typeparam>
            <param name="services"></param>
            <param name="conf"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServiceCollectionExtensions.AddJaeger(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加Jaeger和Interceptor
            </summary>
            <param name="services"></param>
            <param name="conf"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServiceCollectionExtensions.AddServerInterceptor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加服务端Interceptor
            </summary>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <returns></returns>
        </member>
    </members>
</doc>
